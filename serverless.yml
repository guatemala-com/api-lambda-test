service: aprende-headless-api

frameworkVersion: '3'

# Jetpack es todo lo que necesitamos para la optimizaci√≥n
plugins:
  - serverless-jetpack

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${env:NODE_ENV}
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ec2:CreateNetworkInterface
        - ec2:DescribeNetworkInterfaces
        - ec2:DeleteNetworkInterface
      Resource: "*"
  vpc:
    securityGroupIds:
      - sg-017c21818f7a54170 #Backend
    subnetIds:
      - subnet-0781179e4d818463a #Frontend
      - subnet-0f653f903795f4c99 #Backend

  # authorizer api gateway + cognito
  httpApi:
    authorizers:
      cognitoAuthorizer:
        identitySource: $request.header.Authorization
        #issuerUrl: https://cognito-idp.us-west-2.amazonaws.com/${env:COGNITO_USER_POOL_ID} < terraform
        issuerUrl: https://cognito-idp.us-west-2.amazonaws.com/us-west-2_fNlNZKbWS
        audience:
          #- ${env:COGNITO_APP_CLIENT_ID} < terraform
          - 7l1c27fr98o1s4885qd7ke9ha6

package:
  individually: true

functions:
  main:
    handler: dist/lambda.handler
    environment:
      NODE_ENV: ${env:NODE_ENV}
      DB_HOST: ${env:DB_HOST}
      JWT_SECRET: ${env:JWT_SECRET}
    events:
      - httpApi:
          path: /{proxy+}
          method: '*'
          # authorizer api gateway + cognito
          authorizer:
            name: cognitoAuthorizer